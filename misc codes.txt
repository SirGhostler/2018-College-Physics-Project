BREAKOUT CODE:

	//ball->applyForce(glm::vec2(10, 0));

	//m_physicsScene->update(deltaTime);
	//m_physicsScene->updateGizmos();

	//// create colors
	//static const glm::vec4 colors[] = {
	//	glm::vec4(1, 0, 0, 1), glm::vec4(0, 1, 0, 1),
	//	glm::vec4(0, 0, 1, 1), glm::vec4(0.8f, 0, 0.5f, 1),
	//	glm::vec4(0, 1, 1, 1)
	//};

	//static const int rows = 5;
	//static const int columns = 10;
	//static const int hSpace = 1;
	//static const int vSpace = 1;

	//static const glm::vec2 scrExtents(100, 50);
	//static const glm::vec2 boxExtents(7, 3);
	//static const glm::vec2 startPos(
	//	-(columns >> 1)*((boxExtents.x * 2) + vSpace) + boxExtents.x + (vSpace / 2.0f),
	//	 scrExtents.y - ((boxExtents.y * 2) + hSpace));

	//// draw the grids
	//glm::vec2 pos;
	//for (int y = 0; y < rows; y++) {
	//	pos = glm::vec2(startPos.x, startPos.y - (y * ((boxExtents.y * 2) + hSpace)));
	//	for (int x = 0; x < columns; x++) {
	//		aie::Gizmos::add2DAABBFilled(pos, boxExtents, colors[y]);
	//		pos.x += (boxExtents.x * 2) + vSpace;
	//	}
	//}

	////// draw the ball
	////aie::Gizmos::add2DCircle(glm::vec2(0, -35), 3, 12, glm::vec4(1,0,0,1));

	//// paddle movement
	//if (input->isKeyDown(aie::INPUT_KEY_LEFT)) {
	//	paddlePos.x += -50.0f * deltaTime;
	//}
	//if (input->isKeyDown(aie::INPUT_KEY_RIGHT)) {
	//	paddlePos.x += 50.0f * deltaTime;
	//}

	//// draw the player's paddle
	//aie::Gizmos::add2DAABBFilled(glm::vec2(paddlePos.x, -40), glm::vec2(12, 2),
	//	glm::vec4(1, 0, 1, 1));

PROJECTILE PHYSICS STUFFS:

	//ball = new Sphere(glm::vec2(-100, 0), glm::vec2(0, 0), 2.0f, 5, glm::vec4(1, 1, 0, 1));
	//m_physicsScene->addActor(ball);
	//ball2 = new Sphere(glm::vec2(100, 0), glm::vec2(0, 0), 4.0f, 5, glm::vec4(1, 1, 1, 1));
	//m_physicsScene->addActor(ball2);
	//ball3 = new Sphere(glm::vec2(0, 0), glm::vec2(0, 0), 0.1f, 5, glm::vec4(1, 0, 1, 1));
	//m_physicsScene->addActor(ball3);

	//delete ball;
	//delete ball2;
	//delete ball3;